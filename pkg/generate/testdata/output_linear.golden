
## Chart configuration reference

### AWS settings {#aws-settings}

---

`.providerSpecific.ami`

**Type:** `string`

**Amazon machine image (AMI)**

If specified, this image will be used to provision EC2 instances.

---

`.providerSpecific.awsClusterRoleIdentityName`

**Type:** `string`

**Cluster role identity name**

Name of an AWSClusterRoleIdentity object. This in turn refers to the IAM role used to create all AWS cloud resources when creating the cluster. The role can be in another AWS account in order to create all resources in that account. Note: This name does not refer directly to an IAM role name/ARN.

---

`.providerSpecific.flatcarAwsAccount`

**Type:** `string`

**AWS account owning Flatcar image**

AWS account ID owning the Flatcar Container Linux AMI.

---

`.providerSpecific.region`

**Type:** `string`

**Region**




### Connectivity {#connectivity}

---

`.global.connectivity.availabilityZoneUsageLimit`

**Type:** `integer`

**Availability zones**

Maximum number of availability zones (AZ) that should be used in a region. If a region has more than this number of AZs then this number of AZs will be picked randomly when creating subnets.

---

`.global.connectivity.bastion`

**Type:** `object`

**Bastion host**



---

`.global.connectivity.bastion.enabled`

**Type:** `boolean`

**Enable**



---

`.global.connectivity.bastion.instanceType`

**Type:** `string`

**EC2 instance type**



---

`.global.connectivity.bastion.replicas`

**Type:** `integer`

**Number of hosts**



---

`.global.connectivity.bastion.subnetTags`

**Type:** `array`

**Subnet tags**

Tags to filter which AWS subnets will be used for the bastion hosts.

---

`.global.connectivity.bastion.subnetTags[*]`

**Type:** `object`

**Subnet tag**



---

`.global.connectivity.bastion.subnetTags[*].*`

**Type:** `string`

**Tag value**



---

`.global.connectivity.containerRegistries`

**Type:** `object`

**Container registries**

Endpoints and credentials configuration for container registries.

---

`.global.connectivity.containerRegistries.*`

**Type:** `array`

**Registries**

Container registries and mirrors

---

`.global.connectivity.containerRegistries.*[*]`

**Type:** `object`

**Registry**



---

`.global.connectivity.containerRegistries.*[*].credentials`

**Type:** `object`

**Credentials**



---

`.global.connectivity.containerRegistries.*[*].credentials.auth`

**Type:** `string`

**Auth**

Base64-encoded string from the concatenation of the username, a colon, and the password.

---

`.global.connectivity.containerRegistries.*[*].credentials.identitytoken`

**Type:** `string`

**Identity token**

Used to authenticate the user and obtain an access token for the registry.

---

`.global.connectivity.containerRegistries.*[*].credentials.password`

**Type:** `string`

**Password**

Used to authenticate for the registry with username/password.

---

`.global.connectivity.containerRegistries.*[*].credentials.username`

**Type:** `string`

**Username**

Used to authenticate for the registry with username/password.

---

`.global.connectivity.containerRegistries.*[*].endpoint`

**Type:** `string`

**Endpoint**

Endpoint for the container registry.

---

`.global.connectivity.dns`

**Type:** `object`

**DNS**



---

`.global.connectivity.dns.additionalVpc`

**Type:** `array`

**Additional VPCs**

If DNS mode is 'private', the VPCs specified here will be assigned to the private hosted zone.

---

`.global.connectivity.dns.additionalVpc[*]`

**Type:** `string`

**VPC identifier**



---

`.global.connectivity.dns.mode`

**Type:** `string`

**Mode**

Whether the Route53 hosted zone of this cluster should be public or private.

---

`.global.connectivity.dns.resolverRulesOwnerAccount`

**Type:** `string`

**Resolver rules owner**

ID of the AWS account that created the resolver rules to be associated with the workload cluster VPC.

---

`.global.connectivity.network`

**Type:** `object`

**Network**



---

`.global.connectivity.network.podCidr`

**Type:** `string`

**Pod subnet**

IPv4 address range for pods, in CIDR notation.

---

`.global.connectivity.network.serviceCidr`

**Type:** `string`

**Service subnet**

IPv4 address range for services, in CIDR notation.

---

`.global.connectivity.network.vpcCidr`

**Type:** `string`

**VPC subnet**

IPv4 address range to assign to this cluster's VPC, in CIDR notation.

---

`.global.connectivity.proxy`

**Type:** `object`

**Proxy**

Whether/how outgoing traffic is routed through proxy servers.

---

`.global.connectivity.proxy.enabled`

**Type:** `boolean`

**Enable**



---

`.global.connectivity.proxy.httpProxy`

**Type:** `string`

**HTTP proxy**

To be passed to the HTTP_PROXY environment variable in all hosts.

---

`.global.connectivity.proxy.httpsProxy`

**Type:** `string`

**HTTPS proxy**

To be passed to the HTTPS_PROXY environment variable in all hosts.

---

`.global.connectivity.proxy.noProxy`

**Type:** `string`

**No proxy**

To be passed to the NO_PROXY environment variable in all hosts.

---

`.global.connectivity.sshSsoPublicKey`

**Type:** `string`

**SSH public key for single sign-on**



---

`.global.connectivity.subnets`

**Type:** `array`

**Subnets**

Subnets are created and tagged based on this definition.

---

`.global.connectivity.subnets[*]`

**Type:** `object`

**Subnet**



---

`.global.connectivity.subnets[*].cidrBlocks`

**Type:** `array`

**Network**



---

`.global.connectivity.subnets[*].cidrBlocks[*]`

**Type:** `object`





---

`.global.connectivity.subnets[*].cidrBlocks[*].availabilityZone`

**Type:** `string`

**Availability zone**



---

`.global.connectivity.subnets[*].cidrBlocks[*].cidr`

**Type:** `string`

**Address range**

IPv4 address range, in CIDR notation.

---

`.global.connectivity.subnets[*].cidrBlocks[*].tags`

**Type:** `object`

**Tags**

AWS resource tags to assign to this subnet.

---

`.global.connectivity.subnets[*].cidrBlocks[*].tags.*`

**Type:** `string`

**Tag value**



---

`.global.connectivity.subnets[*].isPublic`

**Type:** `boolean`

**Public**



---

`.global.connectivity.subnets[*].tags`

**Type:** `object`

**Tags**

AWS resource tags to assign to this CIDR block.

---

`.global.connectivity.subnets[*].tags.*`

**Type:** `string`

**Tag value**



---

`.global.connectivity.topology`

**Type:** `object`

**Topology**

Networking architecture between management cluster and workload cluster.

---

`.global.connectivity.topology.mode`

**Type:** `string`

**Mode**

Valid values: GiantSwarmManaged, UserManaged, None.

---

`.global.connectivity.topology.prefixListId`

**Type:** `string`

**Prefix list ID**

ID of the managed prefix list to use when the topology mode is set to 'UserManaged'.

---

`.global.connectivity.topology.transitGatewayId`

**Type:** `string`

**Transit gateway ID**

If the topology mode is set to 'UserManaged', this can be used to specify the transit gateway to use.

---

`.global.connectivity.vpcEndpointMode`

**Type:** `string`

**VPC endpoint mode**

Who is reponsible for creation and management of VPC endpoints.

---

`.global.connectivity.vpcMode`

**Type:** `string`

**VPC mode**

Whether the cluser's VPC is created with public, internet facing resources (public subnets, NAT gateway) or not (private).


### Control plane {#control-plane}

---

`.controlPlane.apiMode`

**Types:**`string`, `integer`, `number`

**API mode**

Whether the Kubernetes API server load balancer should be reachable from the internet (public) or internal only (private).

---

`.controlPlane.containerdVolumeSizeGB`

**Type:** `integer`

**Containerd volume size (GB)**



---

`.controlPlane.etcdVolumeSizeGB`

**Type:** `integer`

**Etcd volume size (GB)**



---

`.controlPlane.instanceType`

**Type:** `string`

**EC2 instance type**



---

`.controlPlane.kubeletVolumeSizeGB`

**Type:** `integer`

**Kubelet volume size (GB)**



---

`.controlPlane.machineHealthCheck`

**Type:** `object`

**Machine health check**



---

`.controlPlane.machineHealthCheck.enabled`

**Type:** `boolean`

**Enable**



---

`.controlPlane.machineHealthCheck.maxUnhealthy`

**Type:** `string`

**Maximum unhealthy nodes**



---

`.controlPlane.machineHealthCheck.nodeStartupTimeout`

**Type:** `string`

**Node startup timeout**

Determines how long a machine health check should wait for a node to join the cluster, before considering a machine unhealthy.

---

`.controlPlane.machineHealthCheck.unhealthyNotReadyTimeout`

**Type:** `string`

**Timeout for ready**

If a node is not in condition 'Ready' after this timeout, it will be considered unhealthy.

---

`.controlPlane.machineHealthCheck.unhealthyUnknownTimeout`

**Type:** `string`

**Timeout for unknown condition**

If a node is in 'Unknown' condition after this timeout, it will be considered unhealthy.

---

`.controlPlane.oidc`

**Type:** `object`

**OIDC authentication**



---

`.controlPlane.oidc.caPem`

**Type:** `string`

**Certificate authority**

Identity provider's CA certificate in PEM format.

---

`.controlPlane.oidc.clientId`

**Type:** `string`

**Client ID**



---

`.controlPlane.oidc.groupsClaim`

**Type:** `string`

**Groups claim**



---

`.controlPlane.oidc.issuerUrl`

**Type:** `string`

**Issuer URL**

Exact issuer URL that will be included in identity tokens.

---

`.controlPlane.oidc.usernameClaim`

**Type:** `string`

**Username claim**



---

`.controlPlane.rootVolumeSizeGB`

**Type:** `integer`

**Root volume size (GB)**



---

`.controlPlane.subnetTags`

**Type:** `array`

**Subnet tags**

Tags to select AWS resources for the control plane by.

---

`.controlPlane.subnetTags[*]`

**Type:** `object`

**Subnet tag**



---

`.controlPlane.subnetTags[*].*`

**Type:** `string`

**Tag value**




### Default node pool {#default-node-pool}

---

`.defaultMachinePools.PATTERN`

**Type:** `object`

**Node pool**



---

`.defaultMachinePools.PATTERN.availabilityZones`

**Type:** `array`

**Availability zones**



---

`.defaultMachinePools.PATTERN.availabilityZones[*]`

**Type:** `string`

**Availability zone**



---

`.defaultMachinePools.PATTERN.customNodeLabels`

**Type:** `array`

**Custom node labels**



---

`.defaultMachinePools.PATTERN.customNodeLabels[*]`

**Type:** `string`

**Label**



---

`.defaultMachinePools.PATTERN.customNodeTaints`

**Type:** `array`

**Custom node taints**



---

`.defaultMachinePools.PATTERN.customNodeTaints[*]`

**Type:** `object`





---

`.defaultMachinePools.PATTERN.customNodeTaints[*].effect`

**Type:** `string`

**Effect**



---

`.defaultMachinePools.PATTERN.customNodeTaints[*].key`

**Type:** `string`

**Key**



---

`.defaultMachinePools.PATTERN.customNodeTaints[*].value`

**Type:** `string`

**Value**



---

`.defaultMachinePools.PATTERN.instanceType`

**Type:** `string`

**EC2 instance type**



---

`.defaultMachinePools.PATTERN.maxSize`

**Type:** `integer`

**Maximum number of nodes**



---

`.defaultMachinePools.PATTERN.minSize`

**Type:** `integer`

**Minimum number of nodes**



---

`.defaultMachinePools.PATTERN.rootVolumeSizeGB`

**Type:** `integer`

**Root volume size (GB)**



---

`.defaultMachinePools.PATTERN.subnetTags`

**Type:** `array`

**Subnet tags**

Tags to filter which AWS subnets will be used for this node pool.

---

`.defaultMachinePools.PATTERN.subnetTags[*]`

**Type:** `object`

**Subnet tag**



---

`.defaultMachinePools.PATTERN.subnetTags[*].*`

**Type:** `string`

**Tag value**




### Internal {#internal}For Giant Swarm internal use only, not stable, or not supported by UIs.

---

`.internal.hashSalt`

**Type:** `string`

**Hash salt**

If specified, this token is used as a salt to the hash suffix of some resource names. Can be used to force-recreate some resources.

---

`.internal.kubernetesVersion`

**Type:** `string`

**Kubernetes version**




### Kubectl image {#kubectl-image}

---

`.kubectlImage.name`

**Type:** `string`

**Repository**



---

`.kubectlImage.registry`

**Type:** `string`

**Registry**



---

`.kubectlImage.tag`

**Type:** `string`

**Tag**




### Metadata {#metadata}

---

`.global.metadata.description`

**Type:** `string`

**Cluster description**

User-friendly description of the cluster's purpose.

---

`.global.metadata.name`

**Type:** `string`

**Cluster name**

Unique identifier, cannot be changed after creation.

---

`.global.metadata.organization`

**Type:** `string`

**Organization**




### Node pools {#node-pools}

---

`.nodePools.PATTERN`

**Type:** `object`

**Node pool**



---

`.nodePools.PATTERN.availabilityZones`

**Type:** `array`

**Availability zones**



---

`.nodePools.PATTERN.availabilityZones[*]`

**Type:** `string`

**Availability zone**



---

`.nodePools.PATTERN.customNodeLabels`

**Type:** `array`

**Custom node labels**



---

`.nodePools.PATTERN.customNodeLabels[*]`

**Type:** `string`

**Label**



---

`.nodePools.PATTERN.customNodeTaints`

**Type:** `array`

**Custom node taints**



---

`.nodePools.PATTERN.customNodeTaints[*]`

**Type:** `object`





---

`.nodePools.PATTERN.customNodeTaints[*].effect`

**Type:** `string`

**Effect**



---

`.nodePools.PATTERN.customNodeTaints[*].key`

**Type:** `string`

**Key**



---

`.nodePools.PATTERN.customNodeTaints[*].value`

**Type:** `string`

**Value**



---

`.nodePools.PATTERN.instanceType`

**Type:** `string`

**EC2 instance type**



---

`.nodePools.PATTERN.maxSize`

**Type:** `integer`

**Maximum number of nodes**



---

`.nodePools.PATTERN.minSize`

**Type:** `integer`

**Minimum number of nodes**



---

`.nodePools.PATTERN.rootVolumeSizeGB`

**Type:** `integer`

**Root volume size (GB)**



---

`.nodePools.PATTERN.subnetTags`

**Type:** `array`

**Subnet tags**

Tags to filter which AWS subnets will be used for this node pool.

---

`.nodePools.PATTERN.subnetTags[*]`

**Type:** `object`

**Subnet tag**



---

`.nodePools.PATTERN.subnetTags[*].*`

**Type:** `string`

**Tag value**




### Other global {#other-global}

---

`.global.managementCluster`

**Type:** `string`

**Management cluster**

Name of the Cluster API cluster managing this workload cluster.


### Other {#other}

---

`.baseDomain`

**Type:** `string`

**Base DNS domain**

Description with a "quoted" word.

---

`.cluster-shared`

**Type:** `object`

**Library chart**



---

`.provider`

**Type:** `string`

**Cluster API provider name**





